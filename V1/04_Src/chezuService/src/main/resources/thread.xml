<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">


	 
 
 <!-- 异步线程池 -->  
  <bean id="threadPool" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">  
    <!-- 核心线程数  -->  
    <property name="corePoolSize" value="10" />  
    <!-- 最大线程数 -->  
    <property name="maxPoolSize" value="50" />  
    <!-- 队列最大长度 >=mainExecutor.maxSize -->  
    <property name="queueCapacity" value="1000" />  
    <!-- 线程池维护线程所允许的空闲时间 -->  
    <property name="keepAliveSeconds" value="300" />  
    <!-- 线程池对拒绝任务(无线程可用)的处理策略 -->  
    <property name="rejectedExecutionHandler">  
      <bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />  
    </property>  
  </bean>  
 <!-- 延迟10s加载，并且每隔500秒进行 扫描 -->
  <!-- <bean id="scanTask" class="com.idata365.schedule.ScanTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="scanTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="scanTask" />  
    <property name="delay" value="10000" /> 
 
    <property name="period" value="500000" />   
  </bean>  -->
  <!--Begin#######################同步行程数据给业务#######################################################-->
 <!-- 延迟10s加载，并且每隔5秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="driveSendMainTask" class="com.idata365.schedule.DriveSendMainTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="driveSendMainTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="driveSendMainTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 5秒-->  
    <property name="period" value="5000" />   
  </bean> 
   <!--End#######################同步行程数据给业务#######################################################-->
   
   <!--Begin#######################计算业务得分#######################################################-->
  <!-- 延迟10s加载，并且每隔5秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="calScoreTask" class="com.idata365.schedule.CalScoreMainTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calScoreMainTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calScoreTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 5秒-->  
    <property name="period" value="5000" />   
  </bean> 
  <!--End#######################计算业务得分#######################################################-->
  
  <!--Begin#######################同步违规数据#######################################################-->
  <!-- 延迟10s加载，并且每隔5秒进行违规数据扫描,同步给业务层 -->
  <bean id="addUserDayStatTask" class="com.idata365.schedule.AddUserDayStatMainTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="addUserDayStatTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="addUserDayStatTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 5秒-->  
    <property name="period" value="5000" />   
  </bean> 
  <!--End#######################计算业务得分#######################################################-->
 
 
   <!--Begin#######################初始化家族计分任务数据#######################################################-->
  <!-- 延迟10s加载 -->
  <bean id="configInitTask" class="com.idata365.schedule.ConfigInitTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="configInitTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="configInitTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################初始化家族计分任务数据#######################################################-->
 
 
  <!--Begin#######################加载用户日分数据#######################################################-->
  <!-- 延迟10s加载 -->
  <bean id="calUserDayScoreTask" class="com.idata365.schedule.CalUserDayScoreTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calUserDayScoreTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calUserDayScoreTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################加载用户日分数据#######################################################-->
 
 
   <!--Begin#######################计算家族日分数据#######################################################-->
  <!-- 延迟10s加载 -->
  <bean id="calFamilyDayScoreTask" class="com.idata365.schedule.CalFamilyDayScoreTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calFamilyDayScoreTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calFamilyDayScoreTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################计算家族日分数据#######################################################-->
 
    <!--Begin#######################计算家族PK数据#######################################################-->
  <!-- 延迟10s加载 -->
  <bean id="calFamilyPkTask" class="com.idata365.schedule.CalFamilyDayPkTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calFamilyDayPkTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calFamilyPkTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################计算家族PK数据#######################################################-->
 
  
    <!--Begin#######################计算家族Order数据#######################################################-->
  <!-- 延迟10s加载 -->
  <bean id="calFamilyDayOrderTask" class="com.idata365.schedule.CalFamilyDayOrderTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calFamilyDayOrderTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calFamilyDayOrderTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  
    <bean id="calFamilyMonthOrderTask" class="com.idata365.schedule.CalFamilyMonthOrderTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calFamilyMonthOrderTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calFamilyMonthOrderTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  
  
  <bean id="calFamilyMonthAvgOrderTask" class="com.idata365.schedule.CalFamilyMonthAvgOrderTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calFamilyMonthAvgOrderTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calFamilyMonthAvgOrderTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔10*60*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################计算家族Order数据#######################################################-->
 
  
  <!--Begin#######################清理异常锁定记录#######################################################-->
   <!-- 延迟10s加载，异常锁定任务数据处理，并且每隔10秒进行处理扫描 -->
  <bean id="clearLockTask" class="com.idata365.schedule.ClearLockTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
  <bean id="clearLockTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="clearLockTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 20秒-->  
    <property name="period" value="10000" />   
  </bean> 
  <!--End#######################清理异常锁定记录#######################################################-->
  
  
    <!--Begin#######################测试#######################################################-->
   <!-- 延迟10s加载，异常锁定任务数据处理，并且每隔10秒进行处理扫描 -->
  <!--End#######################测试#######################################################-->
  
    <!--Begin#######################比赛赛季结束家族得分天数加权任务#######################################################-->
   <!-- 延迟10s加载，异常锁定任务数据处理，并且每隔10秒进行处理扫描 -->
  <bean id="calGameEndTask" class="com.idata365.schedule.CalGameEndTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="calGameEndTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="calGameEndTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔20*1000毫秒-->  
    <property name="period" value="20000" />   
  </bean> 
  <!--End#######################比赛结束家族得分天数加权任务#######################################################-->
  
  
  
    <bean id="springScheduledExecutorFactoryBean" class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean">  
    <property name="scheduledExecutorTasks">  
      <list>  
	   <ref bean="driveSendMainTaskExe" />
	   <ref bean="calScoreMainTaskExe"/>
	   <ref bean="addUserDayStatTaskExe"/> 
	   <ref bean="clearLockTaskExe"/>
	   <ref bean="configInitTaskExe"/> 
	   <ref bean="calUserDayScoreTaskExe"/> 
	   <ref bean="calFamilyDayScoreTaskExe"/> 
	   <ref bean="calFamilyDayPkTaskExe"/> 
	   <ref bean="calFamilyDayOrderTaskExe"/> 
       <ref bean="calFamilyMonthAvgOrderTaskExe"/>  
       <ref bean="calGameEndTaskExe"/>    
      </list>  
    </property>  
  </bean>  
</beans>