<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idata365.app.mapper.AssetUsersAssetMapper">
    <resultMap id="BaseResultMap" type="com.idata365.app.entity.AssetUsersAsset" >
    </resultMap>
     <select id="getUserAssetByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
       SELECT *
       FROM  assetUsersAsset where userId=#{userId}
     </select>
     <select id="billBoardByPower" resultMap="BaseResultMap">
       SELECT *
       FROM  assetUsersAsset where userId>1 order by powerNum desc limit 50
     </select>
     <select id="billBoardByDiamond" resultMap="BaseResultMap">
       SELECT *
       FROM  assetUsersAsset where userId>1 order by diamondsNum desc limit 50
     </select>
     
     <select id="getDiamondsCurOrder" resultType="java.lang.Integer" parameterType="java.lang.Long">
       select count(distinct(diamondsNum))+1
       FROM  assetUsersAsset where diamondsNum>(select diamondsNum from assetUsersAsset where userId=#{userId})
     </select>
     
     <select id="getPowersCurOrder" resultType="java.lang.Integer" parameterType="java.lang.Long">
       select count(distinct(powerNum))+1
       FROM  assetUsersAsset where powerNum>(select powerNum from assetUsersAsset where userId=#{userId})
     </select>
     
     <select id="queryDiamondsUserOrderByDiamondsNum" resultType="java.lang.Integer">
 		SELECT count(distinct(diamondsNum))+1
       FROM  assetUsersAsset where diamondsNum>#{diamondsNum}
 	</select>
 	
 	<select id="queryPowersUserOrderByPowerNum" resultType="java.lang.Integer">
 		SELECT count(distinct(powerNum))+1
       FROM  assetUsersAsset where powerNum>#{powerNum}
 	</select>
 	
 	<select id="getAllAppPowers" resultType="java.lang.Long">
 		select sum(powerNum) from assetUsersAsset
 	</select>
 	
 	<select id="getAllAppDiamonds" resultType="java.math.BigDecimal">
 		select sum(freezeDiamondsNum)+sum(diamondsNum) from assetUsersAsset
 	</select>
     
      <update id="updateDiamondsConsume"   parameterType="java.util.HashMap">
        update assetUsersAsset set diamondsNum=(diamondsNum-${diamondsNum}),updateTime=now() where
           <![CDATA[ diamondsNum>=${diamondsNum} and userId=#{userId}]]>
     </update>
     
     <update id="updateDiamondsFreeze"   parameterType="java.util.HashMap">
        update assetUsersAsset set diamondsNum=(diamondsNum-${diamondsNum}),
        freezeDiamondsNum=(freezeDiamondsNum+${diamondsNum}),updateTime=now() where
           <![CDATA[ diamondsNum>=${diamondsNum} and userId=#{userId}]]>
     </update>
     
     <update id="updateDiamondsUnfreeze"   parameterType="java.util.HashMap">
        update assetUsersAsset set diamondsNum=(diamondsNum+${diamondsNum}),
        freezeDiamondsNum=(freezeDiamondsNum-${diamondsNum}),
        updateTime=now() where userId=#{userId}
     </update>
     
      <update id="updateEndUnfreeze"   parameterType="java.util.HashMap">
        update assetUsersAsset set freezeDiamondsNum=(freezeDiamondsNum-${diamondsNum}),
        updateTime=now() where userId=#{userId}
     </update>    
     
     
     <update id="updateDiamondsEarn"   parameterType="java.util.HashMap">
        update assetUsersAsset set diamondsNum=(diamondsNum+${diamondsNum}),hadDiamondsNum=(hadDiamondsNum+${diamondsNum}),updateTime=now() where userId=#{userId}
     </update>
     
      <update id="updateDiamondsAdd"   parameterType="com.idata365.app.entity.AssetUsersDiamondsLogs">
        update assetUsersAsset set diamondsNum=(diamondsNum+${diamondsNum}),hadDiamondsNum=(hadDiamondsNum+${diamondsNum}) 
        where
           userId=#{userId} 
     </update>
     <update id="updatePowerAdd"   parameterType="com.idata365.app.entity.AssetUsersPowerLogs">
        update assetUsersAsset set powerNum=(powerNum+${powerNum}),hadPowerNum=(hadPowerNum+${powerNum}) where
           userId=#{userId} 
     </update>
     
       <insert id="initUser"   parameterType="com.idata365.app.entity.AssetUsersAsset">
            INSERT IGNORE  INTO 
            assetUsersAsset
            (userId,updateTime) 
        VALUES
            (#{userId},now())
     </insert>
     <insert id="userPowersSnapShot"   parameterType="java.lang.String">
             create table ${tableName} select * from assetUsersAsset
     </insert>
     <update id="clearPowers"   parameterType="com.idata365.app.entity.AssetUsersDiamondsLogs">
        update assetUsersAsset set powerNum=0
     </update>
     <select id="getYestodayPower" resultMap="BaseResultMap" parameterType="java.util.HashMap">
		SELECT * FROM ${powerTable} where userId=#{userId}
	 </select>
	 <select id="getAllYestodayAppPowers" resultType="java.lang.Long">
 		select sum(powerNum) from ${powerTable}
 	 </select>
</mapper>