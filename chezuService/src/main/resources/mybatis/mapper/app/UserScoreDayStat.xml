<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idata365.mapper.app.UserScoreDayStatMapper">
   <resultMap id="BaseUserScoreDayStatMap" type="com.idata365.entity.UserScoreDayStat" >
   </resultMap>
    <insert id="initUserFamilyRoleLog" parameterType="java.util.HashMap">
          INSERT IGNORE INTO  userFamilyRoleLog
	       (userId,familyId,daystamp,startTime,endTime)   
	      select userId,familyId,#{daystamp}, #{startTime},#{endTime} from userFamilyRelation
	</insert>
    <insert id="initUserDayScore" parameterType="java.lang.String">
          INSERT IGNORE INTO  userScoreDayStat
	       (userId,userFamilyScoreId,familyId,daystamp,avgScore)   
	      select userId,id,familyId,#{nowDay},0 from userFamilyRoleLog where daystamp=#{daystamp}
	</insert>
    <update id="updateUserScoreDayById" parameterType="com.idata365.entity.UserScoreDayStat" >
       update userScoreDayStat
       set score=#{score},
        mileageScore=#{mileageScore},
         timeScore=#{timeScore},
         brakeTimesScore=#{brakeTimesScore},
       turnTimesScore=#{turnTimesScore},
          speedTimesScore=#{speedTimesScore},
          overspeedTimesScore=#{overspeedTimesScore}, 
         maxspeedScore= #{maxspeedScore}, 
         tiredDriveScore= #{tiredDriveScore}, 
         phoneTimesScore= #{phoneTimesScore},
         nightDriveScore= #{nightDriveScore},
         mazhaScore=#{mazhaScore}
     where id=#{id}
    </update>
    
    
	<insert id="insertOrUpdateUserDayStat" parameterType="com.idata365.entity.UserScoreDayStat" >
	       INSERT ignore INTO 
            userScoreDayStat
            (userId,daystamp,userFamilyScoreId,brakeTimes,brakeTimesUpdateTime,turnTimes,turnTimesUpdateTime,
            speedTimes,speedTimesUpdateTime,overspeedTimes,overspeedTimesUpdateTime,
            tiredDrive,tiredDriveTimes,tiredDriveTimesUpdateTime,nightDriveTimes,nightDriveTimesUpdateTime,maxspeed,
            useShachepian,useHongniu,useYeshijing,useFadongji,
            useCheluntai,useZengyaqi,illegalStopTimes,illegalStopUpdateTime,travelNum,mileage,familyId,avgScore,time) 
        VALUES
            (#{userId},#{daystamp}, #{userFamilyScoreId}, #{brakeTimes}, #{brakeTimesUpdateTime},#{turnTimes},
            #{turnTimesUpdateTime},
            #{speedTimes}, #{speedTimesUpdateTime},#{overspeedTimes}, #{overspeedTimesUpdateTime},
             #{tiredDrive}, #{tiredDriveTimes}, #{tiredDriveTimesUpdateTime}
            , #{nightDriveTimes}, #{nightDriveTimesUpdateTime},#{maxspeed},
            #{useShachepian},#{useHongniu},#{useYeshijing},#{useFadongji},
             #{useCheluntai},#{useZengyaqi},#{illegalStopTimes},#{illegalStopUpdateTime},#{travelNum},#{mileage},
             #{familyId},#{avgScore},#{time})
        ON DUPLICATE KEY UPDATE 
        brakeTimes=brakeTimes+${brakeTimes},
        brakeTimesUpdateTime=#{brakeTimesUpdateTime},
         turnTimes=turnTimes+${turnTimes},
         turnTimesUpdateTime=#{turnTimesUpdateTime},
       speedTimes=speedTimes+${speedTimes},
          speedTimesUpdateTime=#{speedTimesUpdateTime},
          overspeedTimes=overspeedTimes+${overspeedTimes}, 
         overspeedTimesUpdateTime= #{overspeedTimesUpdateTime}, 
         tiredDrive= tiredDrive+${tiredDrive}, tiredDriveTimes= tiredDriveTimes+${tiredDriveTimes},
         tiredDriveTimesUpdateTime= #{tiredDriveTimesUpdateTime},
            nightDriveTimes=nightDriveTimes+${nightDriveTimes},
         nightDriveTimesUpdateTime= #{nightDriveTimesUpdateTime},
         maxspeed=GREATEST(maxspeed,${maxspeed}),
      mileage=mileage+${mileage},
      time=time+${time},
      avgScore=convert(IF(avgScore=30,${avgScore},(avgScore*travelNum)+${avgScore})/(travelNum+${travelNum}),decimal(10,2)),
      travelNum=travelNum+${travelNum}
         
    </insert>
    
    <select id="getUserDayScoreByUserFamily"  resultMap="BaseUserScoreDayStatMap" parameterType="com.idata365.entity.UserFamilyRoleLog">
		SELECT *  from userScoreDayStat where familyId=#{familyId} and userId=#{userId} and daystamp=#{daystamp}
	 </select>
    <select id="getUsersDayScoreByFamily"  resultMap="BaseUserScoreDayStatMap" parameterType="com.idata365.entity.UserScoreDayStat">
		SELECT *  from userScoreDayStat where familyId=#{familyId}  and daystamp=#{daystamp} order by avgScore desc
	 </select>
	
	
		<!-- 定时处理行程逻辑 -->
    <update id="lockUserDayScoreTask" parameterType="com.idata365.entity.UserScoreDayStat" >
       UPDATE 
            userScoreDayStat 
       SET 
        taskStatus=-1,taskFlag=#{taskFlag},taskDealTime=now()
       WHERE 
            taskStatus = 0  and taskFlag='0' and daystamp=#{daystamp} LIMIT 500  
    </update>	
	<!-- 获取任务 -->
	 <select id="getUserDayScoreTask"  resultMap="BaseUserScoreDayStatMap" parameterType="com.idata365.entity.UserScoreDayStat">
		SELECT *  from userScoreDayStat where taskStatus=-1 and taskFlag=#{taskFlag}
	 </select>
	
	 <!-- 更新任务 -->
     <update id="updateUserDayScoreSuccTask" parameterType="com.idata365.entity.UserScoreDayStat" >
        update userScoreDayStat set
        taskStatus=1,taskDealTime=now()
        where  id=#{id}
     </update>
     <!-- 失败的taskStatus分2种情况 2是彻底失败[达到失败上线]，0是还有重试的机会,addDayStatFlag=2为失败-->
    <update id="updateUserDayScoreFailTask" parameterType="com.idata365.entity.UserScoreDayStat" >
       UPDATE 
           userScoreDayStat 
       SET 
           taskStatus=#{taskStatus},taskFlag='0',taskDealTime=now(),taskFailTimes=taskFailTimes+1
       WHERE 
            id=#{id} 
     </update>
     
     <!-- 清除锁定的记录 -->
    <update id="clearLockTask" parameterType="java.lang.Long" >
       UPDATE 
           userScoreDayStat 
       SET 
           taskStatus=0,taskFlag='0',taskFailTimes=taskFailTimes+1
       WHERE 
              taskStatus=-1 and taskFlag<![CDATA[<]]>${compareTimes}
     </update>
     
<!-- 定时处理行程逻辑 结束-->		
	
	
</mapper>