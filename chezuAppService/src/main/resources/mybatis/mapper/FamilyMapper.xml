<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idata365.app.mapper.FamilyMapper">

	<select id="queryFamilyByUserId" resultType="com.idata365.app.entity.FamilyResultBean" parameterType="com.idata365.app.entity.FamilyParamBean">
		select id as myFamilyId, familyName as myFamilyName, imgUrl as myFamilyImgUrl, memberNum, inviteCode from familyInfo where createUserId=#{userId}
	</select>

	<select id="queryFamilyById" resultType="com.idata365.app.entity.FamilyResultBean" parameterType="com.idata365.app.entity.FamilyParamBean">
		select id as myFamilyId, familyName as myFamilyName, imgUrl as myFamilyImgUrl, memberNum, inviteCode from familyInfo where id=#{familyId}
	</select>

	<select id="queryFamilyIdByCompetitorId" resultType="com.idata365.app.entity.FamilyRelationBean" parameterType="com.idata365.app.entity.FamilyRelationBean">
		select selfFamilyId as familyId1, competitorFamilyId as familyId2 from familyRelation where selfFamilyId=#{familyId} or competitorFamilyId=#{familyId}
	</select>

	<select id="queryCreateUserId" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
		select createUserId as userId from familyInfo where id=#{familyId}
	</select>

	<delete id="deleteUserFamilyRelation" parameterType="com.idata365.app.entity.FamilyParamBean" >
       delete from userFamilyRelation where userId=#{userId} and familyId=#{familyId}
    </delete>

	<insert id="save" parameterType="com.idata365.app.entity.FamilyParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into familyInfo(createUserId, familyName, provinceId, cityId, memberNum, imgUrl) values(#{userId}, #{familyName}, #{provinceId}, #{cityId}, 1, #{imgUrl})
	</insert>
	 	
 	<update id="updateUserStraner" parameterType="com.idata365.app.entity.UsersAccountParamBean">
 		update usersAccount set enableStranger=#{enableStranger} where id=#{userId}
 	</update>
	
	<select id="queryFamilys" parameterType="com.idata365.app.entity.FamilyParamBean" resultType="com.idata365.app.entity.FamilyRandBean">
       select t1.imgUrl as imgUrl, memberNum as num, familyName as name, t1.id as familyId from familyInfo t1 
			join usersAccount t2 on (t1.createUserId=t2.id) where t2.enableStranger=1
			order by familyId asc 
       limit #{startPos}, 10;
	</select>
	
	<select id="countStranger" resultType="int">
    	select count(*) from familyInfo t1 
			join usersAccount t2 on (t1.createUserId=t2.id) where t2.enableStranger=1
    </select>
     
	<insert id="saveUserFamily" parameterType="com.idata365.app.entity.FamilyParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into userFamilyRelation(userId, familyId, joinTime) values(#{userId}, #{familyId}, #{joinTime})
	</insert>
     
    <select id="queryFamilyByCode" resultType="com.idata365.app.entity.FamilyRandBean" parameterType="com.idata365.app.entity.FamilyParamBean">
    	select imgUrl, memberNum as num, familyName as name, id as familyId, createUserId as userId from familyInfo where inviteCode=#{inviteCode}
    </select>
     
     <!-- 
    <select id="queryFamilyByCreateUserId" resultType="com.idata365.app.entity.FamilyRandBean" parameterType="com.idata365.app.entity.FamilyParamBean">
    	select id as familyId, familyName as name, imgUrl from familyInfo where createUserId=#{userId}
    </select>
      -->
 
 	<insert id="saveFamilyInvite" parameterType="com.idata365.app.entity.FamilyInviteParamBean" useGeneratedKeys="true" keyProperty="id" >
 		insert into familyInvite(familyId, memberUserId, sendInviteMsg, createTime, leaveWord) values(#{familyId}, #{userId}, 1, #{createTime}, #{msgStr})
 	</insert>
 	
    <select id="queryApplyInfo" resultType="com.idata365.app.entity.FamilyInviteBean" parameterType="com.idata365.app.entity.FamilyInviteParamBean">
    	select t1.memberUserId as userId, familyId, t2.imgUrl as imgUrl, t2.nickName as name, sendInviteMsg as userSource, DATE_FORMAT(t1.createTime, '%Y.%m.%d') as applyDate, leaveWord as msgStr from familyInvite t1 
			join usersAccount t2 on (t1.memberUserId = t2.id) where t1.id=#{msgId}
    </select>
 
    <select id="countByName" resultType="int" parameterType="com.idata365.app.entity.FamilyParamBean">
    	select count(1) from familyInfo where familyName=#{familyName}
    </select>
 	
 	<update id="updateInviteCode" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update familyInfo set inviteCode=#{inviteCode} where id=#{familyId}
 	</update>
 
    <select id="countByCode" resultType="int" parameterType="com.idata365.app.entity.FamilyParamBean">
    	select count(id) from familyInfo where inviteCode=#{inviteCode}
    </select>
 	
 	<select id="queryFamilyIdByUserId" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select familyId from userFamilyRelation where userId=#{userId}
 	</select>
 	
 	<select id="countUsersByFamilyId" resultType="int" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select count(id) from userFamilyRelation where familyId=#{familyId}
 	</select>
 	
 	<select id="countInviteByUserId" resultType="int" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select count(id) from familyInvite where memberUserId=#{userId} and familyId=#{familyId}
 	</select>
 	
 	<delete id="delInviteByUserId" parameterType="com.idata365.app.entity.FamilyParamBean">
 		delete from familyInvite where memberUserId=#{userId} and familyId=#{familyId}
 	</delete>
 	
 	<select id="queryOwnFamily" resultType="com.idata365.app.entity.FamilyInfoScoreBean" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select id as familyId, familyName as name from familyInfo where createUserId=#{userId}
 	</select>
 	
 	<select id="queryJoinFamily" resultType="com.idata365.app.entity.FamilyInfoScoreBean" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.id as familyId, t1.familyName as name from familyInfo t1 
join userFamilyRelation t2 on(t1.id=t2.familyId) where t1.createUserId=#{userId} and t2.userId!=#{userId}
 	</select>
 	
 	<select id="queryUserIdsWithSpeedPenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.speedTimes > t2.speedPenalTimes order by userId asc
 	</select>
 	
 	<update id="updateSpeedPenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set speedPenalTimes=speedPenalTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	
 	<select id="queryUserIdsWithBrakePenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.brakeTimes > t2.brakePenalTimes order by userId asc
 	</select>
 	
 	<update id="updateBrakePenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set brakePenalTimes=brakePenalTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	 	
 	<select id="queryUserIdsWithTurnPenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.turnTimes > t2.turnPenalTimes order by userId asc
 	</select>
 	
 	<update id="updateTurnPenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set turnPenalTimes=turnPenalTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	 	
 	<select id="queryUserIdsWithOverspeedPenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.overspeedTimes > t2.overspeedPenalTimes order by userId asc
 	</select>
 	
 	<update id="updateOverspeedPenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set overspeedTimes=overspeedTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	 	
 	<select id="queryUserIdsWithNightDrivePenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.nightDriveTimes > t2.nightDrivePenalTimes order by userId asc
 	</select>
 	
 	<update id="updateNightDrivePenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set nightDriveTimes=nightDriveTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	 	
 	<select id="queryUserIdsWithTiredDrivePenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.tiredDriveTimes > t2.tiredDrivePenalTimes order by userId asc
 	</select>
 	
 	<update id="updateTiredDrivePenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set tiredDriveTimes=tiredDriveTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
 	 	
 	<select id="queryUserIdsWithIllegalStopPenal" resultType="java.lang.Long" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select t1.userId as userId from userFamilyRelation t1 
			join userScoreDayStat t2 on (t1.userId=t2.userId) 
			where t1.familyid=#{familyId} and t2.daystamp=#{daystamp} and t2.illegalStopTimes > t2.illegalStopPenalTimes order by userId asc
 	</select>
 	
 	<update id="updateIllegalStopPenalTimes" parameterType="com.idata365.app.entity.FamilyParamBean">
 		update userScoreDayStat set illegalStopTimes=illegalStopTimes+1 where userId=#{userId} and daystamp=#{daystamp}
 	</update>
</mapper>