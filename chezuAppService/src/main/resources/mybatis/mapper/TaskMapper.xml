<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idata365.app.mapper.TaskMapper">

	<select id="queryFamilyRelations" resultType="com.idata365.app.entity.FamilyRelationBean" parameterType="com.idata365.app.entity.FamilyRelationBean">
		 select id as familyRelationId, selfFamilyId as familyId1, competitorFamilyId as familyId2, daystamp from familyRelation where daystamp=#{daystamp} order by id desc
	</select>

	<select id="countByFamily" resultType="int" parameterType="com.idata365.app.entity.FamilyRelationBean">
		 select count(id) from userFamilyRelation where familyId=#{familyId}
	</select>

	<delete id="delStations" parameterType="java.util.List">
		delete from parkStation where familyRelationId in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			${item}
		</foreach>
	</delete>
	
	<insert id="saveStations" parameterType="java.util.List">
		insert into parkStation(familyRelationId, status, updateTime) values
		<foreach collection="list" item="item" index="index" separator=",">
			(#{item.familyRelationId}, #{item.status}, #{item.updateTime})
		</foreach>
	</insert>
	
	<select id="queryUserFamilyRelation" resultType="com.idata365.app.entity.UserFamilyRelationBean">
		select userId, familyId, role, joinTime from userFamilyRelation order by id asc
	</select>
	
	<select id="queryFamilyRoleLog" resultType="com.idata365.app.entity.UserFamilyRoleLogBean" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select id, role from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp}
	</select>
	
	<select id="queryRoleExceptDay" resultType="java.lang.Integer" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select role from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp!=#{daystamp}
	</select>
	
	<update id="updateUserRole" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		update userFamilyRelation set role=#{role} where userId=#{userId} and familyId=#{familyId}
	</update>
	
	<insert id="saveUserFamilyRole" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean" useGeneratedKeys="true" keyProperty="id">
		<selectKey keyProperty="count" resultType="int" order="BEFORE">
    		select count(*) from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp}
    	</selectKey>
    	<if test="count > 0">
    		update userFamilyRoleLog set role=#{role}, startTime=#{startTime}, endTime=#{endTime} where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp}
    	</if>
    	<if test="count == 0">
			insert into userFamilyRoleLog(userId, familyId, daystamp, role, startTime, endTime) values(#{userId}, #{familyId}, #{daystamp}, #{role}, #{startTime}, #{endTime})
    	</if>
	</insert>
	
	<insert id="saveOrUpdateUserScoreDay" parameterType="com.idata365.app.entity.UserScoreDayParamBean" useGeneratedKeys="true" keyProperty="id" >
		<selectKey keyProperty="count" resultType="int" order="BEFORE">
    		select count(*) from userScoreDayStat where userId=#{userId} and userFamilyScoreId=#{userFamilyScoreId} and daystamp=#{daystamp}
    	</selectKey>
    	<if test="count > 0">
    		update userScoreDayStat set userId=#{userId}, userFamilyScoreId=#{userFamilyScoreId}, daystamp=#{daystamp} where userId=#{userId} and userFamilyScoreId=#{userFamilyScoreId} and daystamp=#{daystamp}
    	</if>
    	<if test="count == 0">
			insert into userScoreDayStat(userId, userFamilyScoreId, daystamp) values(#{userId}, #{userFamilyScoreId}, #{daystamp})
    	</if>
	</insert>
		
	<select id="queryChallengeLog" resultType="com.idata365.app.entity.FamilyChallengeLogBean" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select familyId, prevType, challengeType from familyChallengeLog where challengeDay=#{challengeDay} order by id asc
	</select>
	 	
 	<select id="queryFamilyByType" resultType="com.idata365.app.entity.FamilyInfoBean" parameterType="com.idata365.app.entity.FamilyParamBean">
 		select id, familyType from familyInfo where familyType=#{familyType} and id!=999999 order by id asc
 	</select>
 	
 	<insert id="saveFamilyRelation" parameterType="com.idata365.app.entity.FamilyRelationParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into familyRelation(selfFamilyId, competitorFamilyId, daystamp) values(#{selfFamilyId}, #{competitorFamilyId}, #{daystamp});
	</insert>
	 	 	
	<select id="queryUserIds" resultType="java.lang.Long">
		select id from usersAccount order by id asc
	</select>
	 
	<insert id="saveOrUpdate" parameterType="com.idata365.app.entity.LotteryBean">
    	<selectKey keyProperty="count" resultType="int" order="BEFORE">
    		select count(*) from lottery where userId=#{userId} and awardId=#{awardId}
    	</selectKey>
    	<if test="count > 0">
    		update lottery set awardCount=awardCount+${awardCount} where userId=#{userId} and awardId=#{awardId}
    	</if>
    	<if test="count == 0">
    		insert into lottery(userId, awardId, awardCount) values(#{userId}, #{awardId}, #{awardCount})
    	</if>
    </insert>
    	
	<select id="queryDriveEditStatus" resultType="com.idata365.app.entity.DriverVehicleResultBean" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select isDrivingEdit from licenseDriver where userId=#{userId}
	</select>
	
	<select id="queryTravelEditStatus" resultType="com.idata365.app.entity.DriverVehicleResultBean" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select isTravelEdit from licenseVehicleTravel where userId=#{userId}
	</select>
</mapper>