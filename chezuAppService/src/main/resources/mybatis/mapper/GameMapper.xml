<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.idata365.app.mapper.GameMapper">
	
	<select id="queryFamilyDriveDayStat" resultType="com.idata365.app.entity.ViolationStatBean" parameterType="com.idata365.app.entity.ViolationStatParamBean">
		select * from familyDriveDayStat where familyId=#{familyId} and daystamp=#{daystamp}
	</select>
	
	<insert id="saveFamilyRelation" parameterType="com.idata365.app.entity.FamilyRelationParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into familyRelation(selfFamilyId, competitorFamilyId, daystamp) values(#{selfFamilyId}, #{competitorFamilyId}, #{daystamp});
	</insert>
	
	<select id="queryStations" resultType="com.idata365.app.entity.StationBean" parameterType="com.idata365.app.entity.FamilyRelationParamBean">
		select id as stationId, status, familyId from parkStation where familyRelationId=#{familyRelationId} order by id asc
	</select>
	
	<update id="updateToStopParkStation" parameterType="com.idata365.app.entity.GameFamilyParamBean">
		update parkStation set userId=#{userId}, familyId=#{familyId}, status='STOP' where id=#{stationId} and (status='NO_PEOPLE' or (familyId=#{familyId} and status='HOLD'))
	</update>
	
	<update id="updateToHoldParkStation" parameterType="com.idata365.app.entity.GameFamilyParamBean">
		update parkStation set familyId=#{familyId}, status='HOLD' where id=#{stationId} and status='NO_PEOPLE'
	</update>
	
	<select id="queryFamilyOtherUserId" resultType="java.lang.Long" parameterType="com.idata365.app.entity.GameFamilyParamBean">
		select userId from userFamilyRelation where familyId=#{familyId} and userId!=#{userId} order by id asc
	</select>
	
	<update id="updateTravelHistoryHidden" parameterType="com.idata365.app.entity.TravelHistoryParamBean">
		update userTravelHistory set hiddenFlag=1 where id=#{travelId}
	</update>
	
	<select id="countTomorrowRole" resultType="int" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select count(id) from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp}
	</select>
	
	<update id="updateUserFamilyRole" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		update userFamilyRoleLog set role=#{role} where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp}
	</update>
	
	<insert id="saveUserFamilyRole" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into userFamilyRoleLog(userId, familyId, daystamp, role, startTime, endTime) values(#{userId}, #{familyId}, #{daystamp}, #{role}, #{startTime}, #{endTime})
	</insert>
	
	<select id="queryRoleByDay" resultType="java.lang.Integer" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select role from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp} order by id desc
	</select>
	
	<select id="queryFamilyRoleLog" resultType="com.idata365.app.entity.UserFamilyRoleLogBean" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select id, role from userFamilyRoleLog where userId=#{userId} and familyId=#{familyId} and daystamp=#{daystamp} order by id desc
	</select>
	
	<select id="queryScore" resultType="java.lang.Double" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select score from userScoreDayStat where userId=#{userId} and userFamilyScoreId=#{userFamilyRoleLogId} and daystamp=#{daystamp}
	</select>
	
	<select id="queryUserFamilyRelation" resultType="com.idata365.app.entity.UserFamilyRelationBean">
		select userId, familyId, role, joinTime from userFamilyRelation where role is not NULL order by id asc
	</select>
	
	<insert id="saveUserScoreDay" parameterType="com.idata365.app.entity.UserScoreDayParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into userScoreDayStat(userId, userFamilyScoreId, daystamp) values(#{userId}, #{userFamilyScoreId}, #{daystamp})
	</insert>
	
	<select id="countBeChallenge" resultType="int" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select count(id) from familyChallengeLog where challengeType=#{challengeType} and challengeDay=#{challengeDay}
	</select>
	
	<select id="countChallenge" resultType="int" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select count(id) from familyChallengeLog where prevType=#{prevType} and challengeDay=#{challengeDay}
	</select>
		
	<insert id="saveChallengeLog" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean" useGeneratedKeys="true" keyProperty="id" >
		insert into familyChallengeLog(familyId, prevType, challengeType, challengeDay) values(#{familyId}, #{prevType}, #{challengeType}, #{challengeDay})
	</insert>
	
	<select id="countChallengeByFamilyId" resultType="int" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select count(id) from familyChallengeLog where familyId=#{familyId} and challengeDay=#{challengeDay}
	</select>
	
	<select id="queryChallengeLog" resultType="com.idata365.app.entity.FamilyChallengeLogBean" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select familyId, prevType, challengeType from familyChallengeLog where challengeDay=#{challengeDay} order by id asc
	</select>
	
	<select id="countRoleByRole" resultType="com.idata365.app.entity.RoleCountBean" parameterType="com.idata365.app.entity.UserFamilyRoleLogParamBean">
		select role, count(id) as roleNum from userFamilyRoleLog where userId=#{userId} group by role order by role asc
	</select>
	
	<select id="queryChallengeType" resultType="com.idata365.app.entity.FamilyChallengeLogBean" parameterType="com.idata365.app.entity.FamilyChallengeLogParamBean">
		select familyId, prevType, challengeType from familyChallengeLog where familyId=#{familyId} and challengeDay=#{challengeDay} 
	</select>
	
</mapper>