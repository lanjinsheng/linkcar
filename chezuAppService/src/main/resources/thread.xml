<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">




	<!-- 异步线程池 -->
	<bean id="threadPool"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<!-- 核心线程数 -->
		<property name="corePoolSize" value="10" />
		<!-- 最大线程数 -->
		<property name="maxPoolSize" value="50" />
		<!-- 队列最大长度 >=mainExecutor.maxSize -->
		<property name="queueCapacity" value="1000" />
		<!-- 线程池维护线程所允许的空闲时间 -->
		<property name="keepAliveSeconds" value="300" />
		<!-- 线程池对拒绝任务(无线程可用)的处理策略 -->
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	<!-- 延迟40s加载，并且每隔1秒进行开始比赛的扫描 -->
	<bean id="scanTask" class="com.idata365.app.schedule.ScanTask">
		<property name="threadPool" ref="threadPool"></property>
	</bean>

	<bean id="scanTaskExe"
		class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">
		<property name="runnable" ref="scanTask" />
		<!-- 容器加载10秒后开始执行 -->
		<property name="delay" value="10000" />
		<!-- 每次任务间隔 10秒 -->
		<property name="period" value="500000" />
	</bean>
   <!-- begin 轮训任务，进行成就处理 -->
	<bean id="calTaskAchieveAddValue" class="com.idata365.app.schedule.CalTaskAchieveAddValue">
		<property name="threadPool" ref="threadPool"></property>
	</bean>

	<bean id="calTaskAchieveAddValueExe"
		class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">
		<property name="runnable" ref="calTaskAchieveAddValue" />
		<!-- 容器加载10秒后开始执行 -->
		<property name="delay" value="10000" />
		<!-- 每次任务间隔 10秒 -->
		<property name="period" value="20000" />
	</bean>
	<!--end  轮训任务，进行成就处理 -->
	  <!--Begin#######################清理异常锁定记录#######################################################-->
   <!-- 延迟10s加载，异常锁定任务数据处理，并且每隔10秒进行处理扫描 -->
  <bean id="clearLockTask" class="com.idata365.app.schedule.ClearLockTask">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
  <bean id="clearLockTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="clearLockTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 20秒-->  
    <property name="period" value="100000" />   
  </bean> 
  <!--End#######################清理异常锁定记录#######################################################-->
  <!--Begin#######################定时解锁用户成就BY:CFY#######################################################-->
  <!-- 延迟10s加载，并且每隔5秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="giveUserAchieveTask" class="com.idata365.app.schedule.TaskGiveUserAchieve">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="giveUserAchieveTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="giveUserAchieveTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="10000" /> 
        <!-- 每次任务间隔 60秒-->  
    <property name="period" value="60000" />   
  </bean> 
  <!--End#######################定时解锁用户成就#######################################################-->
 
 
 <!--Begin#######################定时消息任务#######################################################-->
  <!-- 延迟11s加载，并且每隔10秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="messagePushTask" class="com.idata365.app.schedule.CalTaskMessagePush">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="messagePushTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="messagePushTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="11000" /> 
        <!-- 每次任务间隔 60秒-->  
    <property name="period" value="10000" />   
  </bean> 
  <!--End#######################定时消息任务#######################################################-->
 
  <!--Begin#######################定时消息任务#######################################################-->
  <!-- 延迟11s加载，并且每隔10秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="awardInfoPushTask" class="com.idata365.app.schedule.CalTaskAwardInfoPush">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="awardInfoPushTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="awardInfoPushTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="12000" /> 
        <!-- 每次任务间隔 60秒-->  
    <property name="period" value="10000" />   
  </bean> 
  <!--End#######################定时消息任务#######################################################-->
 
 
  <!--Begin#######################初始化系统任务#######################################################-->
  <!-- 延迟12s加载，并且每隔10秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="systemFlagTask" class="com.idata365.app.schedule.CalTaskSystemFlag">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="systemFlagTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="systemFlagTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="12000" /> 
        <!-- 每次任务间隔 60秒-->  
    <property name="period" value="10000" />   
  </bean> 
  <!--End#######################初始化系统任务#######################################################-->
   <!--Begin#######################每日发放用户道具#######################################################-->
  <!-- 延迟13s加载，并且每隔10秒进行处理扫描,同步行程数据给业务层 -->
  <bean id="userLoterryTask" class="com.idata365.app.schedule.CalTaskUserLottery">  
    <property name="threadPool" ref="threadPool"></property>
  </bean>  
   
  <bean id="userLoterryTaskExe" class="org.springframework.scheduling.concurrent.ScheduledExecutorTask">  
    <property name="runnable" ref="userLoterryTask" />  
    <!-- 容器加载10秒后开始执行 -->  
    <property name="delay" value="13000" /> 
        <!-- 每次任务间隔 60秒-->  
    <property name="period" value="10000" />   
  </bean> 
  <!--End#######################每日发放用户道具#######################################################-->
 
	<bean id="springScheduledExecutorFactoryBean"
		class="org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean">
		<property name="scheduledExecutorTasks">
			<list>
			<!-- 
				<ref bean="scanTaskExe" />
				<ref bean="calTaskAchieveAddValueExe" />
				<ref bean="giveUserAchieveTaskExe" />
				<ref bean="messagePushTaskExe" />
				<ref bean="awardInfoPushTaskExe" />
				<ref bean="systemFlagTaskExe" />
				<ref bean="userLoterryTaskExe" />
				<ref bean="clearLockTaskExe" /> -->
				
			</list>
		</property>
	</bean>

	<bean id="userFamilyRoleTask" class="com.idata365.app.schedule.UserFamilyRoleTask"></bean>
	
	<bean id="SpringQtzJobMethod"  
	    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject">  
	        <ref bean="userFamilyRoleTask" />  
	    </property>  
	    <property name="targetMethod">  <!-- 要执行的方法名称 -->  
	        <value>run</value>  
	    </property>  
	</bean>  
	
	<bean id="cronTriggerFactoryBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean ">  
	    <property name="jobDetail" ref="SpringQtzJobMethod"></property>  
	    <!-- 每5s执行一次 -->
	    <!-- 
	    <property name="cronExpression" value="50 21 13 * * ?"></property>  
	     -->
	    <property name="cronExpression" value="55 59 23 * * ?"></property>  
	</bean>  
	
	<bean id="familyRelationTask" class="com.idata365.app.schedule.FamilyRelationTask"></bean>
	
	<bean id="familyRelationSpringQtzJobMethod"  
	    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject">  
	        <ref bean="familyRelationTask" />  
	    </property>  
	    <property name="targetMethod">  <!-- 要执行的方法名称 -->  
	        <value>run</value>  
	    </property>  
	</bean>  
	
	<bean id="familyRelationCronTriggerFactoryBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean ">  
	    <property name="jobDetail" ref="familyRelationSpringQtzJobMethod"></property>  
	    <!-- 每5s执行一次 -->
	    <!-- 
	    <property name="cronExpression" value="55 30 10 * * ?"></property>  
	     -->
	    <property name="cronExpression" value="01 0 12 * * ?"></property>  
	</bean>
	
	<bean id="stationTask" class="com.idata365.app.schedule.StationTask"></bean>
	
	<bean id="stationTaskSpringQtzJobMethod"  
	    class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">  
	    <property name="targetObject">  
	        <ref bean="stationTask" />  
	    </property>  
	    <property name="targetMethod">  <!-- 要执行的方法名称 -->  
	        <value>run</value>  
	    </property>  
	</bean>  
	
	<bean id="stationTaskCronTriggerFactoryBean" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean ">  
	    <property name="jobDetail" ref="stationTaskSpringQtzJobMethod"></property>  
	    <property name="cronExpression" value="0 0 0,10,16 * * ?"></property>  
	    <!-- 
	    <property name="cronExpression" value="0 36 16 * * ?"></property>  
	     -->
	</bean>
	
	<bean id="SpringJobSchedulerFactoryBean"  
	    class="org.springframework.scheduling.quartz.SchedulerFactoryBean">  
	    <property name="triggers">  
	        <list>  
	            <ref bean="cronTriggerFactoryBean" />  
	            <ref bean="familyRelationCronTriggerFactoryBean" />  
	            <ref bean="stationTaskCronTriggerFactoryBean" />  
	            <!-- 
	             -->
	        </list>  
	    </property>  
	</bean>  
</beans>